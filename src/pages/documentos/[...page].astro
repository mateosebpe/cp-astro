---
import type { GetStaticPaths } from "astro";
import Layout from '../../layouts/Layout.astro'
import PostCard from '../../components/Cards/PostCard.astro';
import Container from '../../components/Container.astro'
import { getCollection, getEntry } from 'astro:content';
import Pagination from '../../components/Pagination.astro';
import BigTitle from "../../components/BigTitle.astro";
import DocCard from "../../components/Cards/DocCard.astro";
import Title from "../../components/Title.astro";



export const getStaticPaths = (async ({ paginate }) =>{

    const allColumnPosts = await getCollection('documentos');
    allColumnPosts.sort((a, b) =>{ 
  return b.data.publishDate.getTime() - a.data.publishDate.getTime(); // Ascending order
});
return paginate(allColumnPosts, { pageSize: 6 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;


let pagination = JSON.parse(JSON.stringify(page));
---

<Layout title='Documentos - Congreso del Pueblo' img='../../../img/logo.png' description="Todos los documentos de Congreso del Pueblo. Declaraciones, resoluciones, etc.">
    <Container>
        <BigTitle>Documentos</BigTitle>
        <Title>Declaraciones, resoluciones, etc.</Title>
       <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
        {pagination.data.map(post =>{

            return <DocCard post={post}></DocCard>
        })       
        }
       </div>
            <Pagination currentPage={pagination.currentPage} nextPage={pagination.url.next} prevPage={pagination.url.prev} lastPage={pagination.lastPage}></Pagination>
    </Container>
</Layout>