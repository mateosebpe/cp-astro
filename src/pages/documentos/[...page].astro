---
import type { GetStaticPaths } from "astro";
import Layout from '../../layouts/Layout.astro'
import PostCard from '../../components/Cards/PostCard.astro';
import Container from '../../components/Container.astro'
import { getCollection, getEntry } from 'astro:content';
import Pagination from '../../components/Pagination.astro';
import BigTitle from "../../components/BigTitle.astro";
import DocCard from "../../components/Cards/DocCard.astro";



export const getStaticPaths = (async ({ paginate }) =>{

    const allColumnPosts = await getCollection('documentos');
allColumnPosts.sort((a, b) =>{ 
    const convertToDate = (dateString: string)=> {
      //  Convert a "dd/MM/yyyy" string into a Date object
      let d = dateString.split("/");
      let dat = new Date(d[2] + '/' + d[1] + '/' + d[0]);
      return dat.toDateString();     
  }
    
    return Date.parse(convertToDate(b.data.date)) - Date.parse(convertToDate(a.data.date))
});
return paginate(allColumnPosts, { pageSize: 6 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;


let pagination = JSON.parse(JSON.stringify(page));
---

<Layout title='La Columna del Pueblo' img='../../../public/img/columna/columna-logo.webp'>
    <BigTitle>Documentos</BigTitle>
    <Container title="Declaraciones, resoluciones, etc.">
       <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
        {pagination.data.map(post =>{

            return <DocCard post={post}></DocCard>
        })       
        }
       </div>
            <Pagination currentPage={pagination.currentPage} nextPage={pagination.url.next} prevPage={pagination.url.prev} lastPage={pagination.lastPage}></Pagination>
    </Container>
</Layout>