---
import { getCollection, getEntry, getEntries } from "astro:content";
import PostCard from "./Cards/PostCard.astro";
import DocCard from "./Cards/DocCard.astro";
import Link from "./Link.astro";

interface Props {
    entries: any;
    count: number;
}

const { entries, count } = Astro.props;


const lastPost = await getCollection(entries);

const sortedPosts = lastPost.sort((a: any, b: any) =>{ 
  return b.data.publishDate.getTime() - a.data.publishDate.getTime(); // Ascending order
}).slice(0,count);
---
<div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-3 gap-4 ">
{sortedPosts.map((p: any) => {
  
  if (entries == 'columna'){
  return (

 <PostCard title={p.data.title} metatitle={p.data.metatitle? p.data.metatitle : ''} category={p.data.category} date={p.data.publishDate.toLocaleDateString('es-LA')} picture={p.data.picture} slug={p.slug} collection={p.collection} tags={p.data.tags? p.data.tags : ""} ></PostCard> 
 )}
  if (entries == 'documentos'){
    return (<DocCard post={p}></DocCard>)
  }
})}
   
  </div>
  <div class="flex justify-center mt-4">
    <Link  href=`/${entries}`>Ver todas las publicaciones...</Link>
  </div>